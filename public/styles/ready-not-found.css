.consultation-form-not-found {
    padding: 0;
}

.user-agreement-label {
    padding-left: 0;
}

button.mfp-close-btn-in .mfp-close .button-close-not-found {
    color: forestgreen;
    background-color: #ff7800;
    border-radius: 50%;
    /*margin-top: -17px;*/
    right: -21px;
    opacity: 1;
    color: #ffffff;
    top: -18px;
}

.application-input:focus {
    border-color: #d8dce6;
}

.block-with-consultation-form {
    margin-top: 9px;
}

.block-with-application-form {
    position: relative;
    max-width: 335px;
    background-color: #ffffff;
    padding: 35px;
    border-radius: 4px;
    margin-left: auto;
    margin-right: auto;
}

.not-found-page {
    font-family: 'museo_sans_cyrl300', Arial, serif;
    overflow-x: hidden;
    color: #333333;
}

.container-with-not-found-page-content {
    padding-top: 35px;
    padding-left: 20px;
    padding-right: 20px;
    padding-bottom: 20px;
}

.not-found-page-h1 {
    font-family: 'museo_sans_cyrl700', Arial, serif;
    line-height: 26px;
    font-size: 20px;
}

.not-found-page-p {
    font-family: 'museo_sans_cyrl300', Arial, serif;
    line-height: 21px;
    font-size: 16px;
}

.not-found-page-p+.block-with-all-information-about-not-found {
    margin-top: 20px;
}

.not-found-page-h1+.not-found-page-p {
    margin-top: 14px;
}

.block-with-all-information-about-not-found>.block-with-form-and-link+.not-found-img {
    margin-top: 30px;
}

.block-with-form-and-link>.block-with-application-form {
    /*border: 1px solid rgba(128, 132, 153, 0.25);//*/
    border-radius: 4px;
    width: 280px;
    padding-top: 20px;
    padding-left: 28px;
    padding-right: 28px;
    padding-bottom: 11px;
    -webkit-box-shadow: 0 1px 18px rgba(128, 132, 153, 0.25);
    box-shadow: 0 1px 18px rgba(128, 132, 153, 0.25);
}

.application-form-title {
    font-family: 'museo_sans_cyrl500', Arial, serif;
    line-height: normal;
    font-size: 18px;
}

.block-with-form-and-link>.block-with-application-form>.application-form-title+.application-form-with-inputs {
    margin-top: 16px;
}

.block-with-form-and-link>a {
    display: block;
    line-height: 25px;
    font-size: 18px;
    color: #2A7DD1;
    font-family: 'museo_sans_cyrl500', Arial, serif;
    text-decoration: underline;
    -webkit-text-decoration-color: rgba(42, 125, 209, 0.3);
    text-decoration-color: rgba(42, 125, 209, 0.3);
}

.block-with-application-form+a {
    margin-top: 36px;
}

.application-input {
    color: #A0A4AD;
    border: 0;
    border-bottom: 1px solid #D8DCE6;
    width: 100%;
    margin: 10px 0 10px 0px;
    line-height: 40px;
    height: 46px;
    line-height: normal;
    font-size: 16px;
    font-family: 'museo_sans_cyrl500', Arial, serif;
    /* margin: 0px;*/
}

.placeholder-form {
    color: #A0A4AD
}

.placeholder-form>span {
    color: #FF7800;
}

.application-form-button {
    width: 100%;
    line-height: normal;
    font-size: 18px;
    font-family: 'museo_sans_cyrl500', Arial, serif;
    color: #FFFFFF;
    height: 60px;
    border-radius: 30px;
}

.application-user-agreement-text {
    line-height: normal;
    font-size: 10px;
    font-family: 'museo_sans_cyrl300', Arial, serif;
    color: #A0A4AD
}

.application-user-agreement-text>a {
    color: #A0A4AD;
    text-decoration: underline;
    -webkit-text-decoration-color: rgba(160, 164, 173, 0.3);
    text-decoration-color: rgba(160, 164, 173, 0.3);
}

.user-agreement {
    display: grid;
    grid-template-columns: 10px 1fr;
    grid-gap: 9px;
    margin-top: 24px;
}

.user-agreement::before {
    content: "";
    display: block;
    width: 10px;
    height: 10px;
    border-radius: 3px;
    border: 1px solid #A0A4AD;
    cursor: pointer;
}

.user-agreement-checkbox:not(:checked)+.user-agreement-submit {
    pointer-events: none;
    -webkit-filter: opacity(0.4);
    filter: opacity(0.4);
}

.user-agreement-checkbox:checked~.user-agreement::before {
    border-color: #FF7800;
    /* /content: "\2713"; */
    background-image: url("https://kkt365.ru/themes/evotor/assets/i/checked.svg");
    background-repeat: no-repeat;
    background-size: 9px 7px;
}

.container-with-banners {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    padding: 0px;
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 8px;
}

section.container.container-with-banners::before {
    content: none;
}

.block-with-banner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    height: 310px;
    background-color: gold;
    padding-top: 28px;
    padding-left: 20px;
    padding-right: 20px;
    padding-bottom: 44px;
}

.block-with-banner.dark-blue {
    background: -o-radial-gradient(50% 45.98%, 701.57px, #C4E8FC 0%, #5D97EE 100%), #373CA3;
    background: radial-gradient(701.57px at 50% 45.98%, #C4E8FC 0%, #5D97EE 100%), #373CA3;
}

.block-with-banner.light-blue {
    background: -o-radial-gradient(50% 45.98%, 701.57px, #A6F9FD 0%, #31A7CB 100%), #373CA3;
    background: radial-gradient(701.57px at 50% 45.98%, #A6F9FD 0%, #31A7CB 100%), #373CA3;
}

.block-with-banner.red {
    background: -o-radial-gradient(50% 45.98%, 701.57px, #FFD9D8 0%, #EB6964 100%), #373CA3;
    background: radial-gradient(701.57px at 50% 45.98%, #FFD9D8 0%, #EB6964 100%), #373CA3;
}

.block-with-banner.yellow {
    background: -o-radial-gradient(50% 45.98%, 701.57px, #FFE89C 0%, #FFB84C 100%), #373CA3;
    background: radial-gradient(701.57px at 50% 45.98%, #FFE89C 0%, #FFB84C 100%), #373CA3;
}

.block-with-banner.green {
    background: -o-radial-gradient(50% 45.98%, 701.57px, #C5FDB7 0%, #44C24A 100%), #373CA3;
    background: radial-gradient(701.57px at 50% 45.98%, #C5FDB7 0%, #44C24A 100%), #373CA3;
}

.block-with-banner.purple {
    background: -o-radial-gradient(50% 45.98%, 701.57px, #FFBCE1 0%, #DB58A0 100%), #373CA3;
    background: radial-gradient(701.57px at 50% 45.98%, #FFBCE1 0%, #DB58A0 100%), #373CA3;
}

.block-with-banner>.block-with-banner-title {
    letter-spacing: -0.04em;
    font-size: 34px;
    text-align: center;
    font-family: 'museo_sans_cyrl700', Arial, serif;
    line-height: normal;
}

.block-with-banner>.block-with-banner-title+.block-with-banner-description {
    margin-top: 17px;
}

.block-with-banner>.block-with-banner-description {
    font-family: 'museo_sans_cyrl300', Arial, sans-serif;
    line-height: 22px;
    font-size: 16px;
    text-align: center;
}

.block-with-banner>.block-with-banner-description>span {
    font-family: 'museo_sans_cyrl700', Arial, serif;
}

.block-with-banner>.banner-button {
    cursor: pointer;
    display: inline-block;
    line-height: 32px;
    font-size: 18px;
    text-align: center;
    font-family: 'museo_sans_cyrl700', Arial, serif;
    color: #FFFFFF;
    background-color: #FF7800;
    border: 1px solid #FF7800;
    border-radius: 50px;
    padding-left: 40px;
    padding-right: 40px;
    padding-top: 13px;
    padding-bottom: 13px;
    margin-top: auto;
    margin-left: auto;
    margin-right: auto;
    border: 3px solid #ff7800;
}

.block-with-banner>.banner-button:hover {
    text-decoration: none;
    border: 3px solid #ff7800;
    background-color: #ff9553;
}

.container-with-not-found-page-content+.container-with-banners {
    margin-top: 44px;
}

.text-not-found {
    margin-top: 0;
}

.not-found-page-h1 {
    margin-top: 0;
}

@media (min-width: 768px) {
    .container-with-banners {
        grid-template-columns: repeat(auto-fit, 340px);
    }
}

@media (min-width: 1600px) {
    .not-found-page {
        padding-bottom: 80px;
    }
    .text-not-found {
        margin-top: 0;
    }
    .container-with-not-found-page-content {
        padding-bottom: 24px;
        padding-top: 44px;
        padding-left: 0;
    }
    .not-found-page-h1 {
        line-height: 39px;
        font-size: 28px;
    }
    .not-found-page-p {
        line-height: 28px;
        font-size: 20px;
    }
    .not-found-page-p+.block-with-all-information-about-not-found {
        margin-top: 47px;
    }
    .not-found-page-h1+.not-found-page-p {
        margin-top: 20px;
        padding-right: 305px;
    }
    .block-with-all-information-about-not-found {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
    }
    .block-with-all-information-about-not-found>.block-with-form-and-link+.not-found-img {
        margin-left: 88px;
        margin-top: 0;
    }
    .block-with-form-and-link>.block-with-application-form {
        width: 335px;
        height: 376px;
        padding-top: 25px;
        padding-left: 36px;
        padding-right: 36px;
        padding-bottom: 28px;
    }
    .block-with-form-and-link>.block-with-application-form>.application-form-title {
        line-height: normal;
        font-size: 22px;
    }
    .block-with-form-and-link>.block-with-application-form>.application-form-title+.application-form-with-inputs {
        margin-top: 28px;
    }
    .block-with-form-and-link>.application-form-with-inputs {}
    .block-with-application-form+a {
        margin-top: 60px;
    }
    .user-agreement {
        margin-top: 36px;
    }
    .container-with-banners {
        display: grid;
        grid-template-columns: repeat(3, 372px);
        grid-gap: 20px;
        /*padding-left: 15vw;
 */
        /*padding-right: 15vw;
 */
    }
    .block-with-consultation-form {
        margin-top: 19px;
    }
    .application-form-title {
        font-size: 22px;
    }
    .block-with-banner {
        height: 346px;
        padding-top: 19px;
        padding-left: 37px;
        padding-right: 36px;
        padding-bottom: 36px;
        border-radius: 4px;
    }
    .block-with-banner.dark-blue {
        background: -o-radial-gradient(50% 50%, 721.68px, #C4E8FC 0%, #649CEF 100%), #F4F4F4;
        background: radial-gradient(721.68px at 50% 50%, #C4E8FC 0%, #649CEF 100%), #F4F4F4;
    }
    .block-with-banner.light-blue {
        background: -o-radial-gradient(50% 50%, 721.68px, #A6F9FD 0%, #2BA2C8 100%), #F4F4F4;
        background: radial-gradient(721.68px at 50% 50%, #A6F9FD 0%, #2BA2C8 100%), #F4F4F4;
    }
    .block-with-banner.red {
        background: -o-radial-gradient(50% 50%, 721.68px, #FFD9D8 0%, #EB6B65 100%), #F4F4F4;
        background: radial-gradient(721.68px at 50% 50%, #FFD9D8 0%, #EB6B65 100%), #F4F4F4;
    }
    .block-with-banner.yellow {
        background: -o-radial-gradient(50% 50%, 721.68px, #FFE89C 0%, #FEB547 100%), #F4F4F4;
        background: radial-gradient(721.68px at 50% 50%, #FFE89C 0%, #FEB547 100%), #F4F4F4;
    }
    .block-with-banner.green {
        background: -o-radial-gradient(50% 50%, 721.68px, #C5FDB7 0%, #3DBE44 100%), #F4F4F4;
        background: radial-gradient(721.68px at 50% 50%, #C5FDB7 0%, #3DBE44 100%), #F4F4F4;
    }
    .block-with-banner.purple {
        background: -o-radial-gradient(53.09% 50.87%, 772.81px, #FFBCE1 0%, #D8529C 100%), #F4F4F4;
        background: radial-gradient(772.81px at 53.09% 50.87%, #FFBCE1 0%, #D8529C 100%), #F4F4F4;
    }
    .block-with-banner>.block-with-banner-title {
        line-height: normal;
        font-size: 40px;
        text-align: left;
    }
    .block-with-banner>.block-with-banner-description {
        margin-top: 15px;
        text-align: left;
        margin-bottom: 20px;
    }
    .block-with-banner>.block-with-banner-description.mobile-description {
        display: none;
    }
}

@media (max-width: 1599px) {
    .application-input {
        margin: 0;
        margin-bottom: 8px;
        height: 46px;
    }
    .application-form-button {
        margin-top: 20px;
    }
    .user-agreement::before {
        /*  margin-top: 6px;*/
    }
    .block-with-banner>.block-with-banner-description.desktop-description {
        display: none;
    }
}

@media (max-width:1599px) {
    .application-user-agreement-text {
        /*     margin-top: 6px; //;*/
    }
    .block-with-banner {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        -webkit-box-align: center;
        -ms-flex-align: center;
        align-items: center;
    }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
